name: Terraform Multi-Module Pipeline

on:
  push:
    branches: [feature/*]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'
  pull_request:
    branches: [main]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'

env:
  TF_VERSION: '1.12.2'
  VAR_FILE: 'environments/dev.tfvars'

jobs:
  # PLAN JOBS (Feature Branch Push)
  plan-resource-group:
    name: Plan resource_group
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: |
          cd config_files/resource_group
          terraform init -backend-config="key=resource_group.tfstate"
          terraform validate
          terraform plan -var-file="../../${VAR_FILE}" -out=tfplan-resource-group

  plan-azure-ad-sp:
    name: Plan azure_ad_sp
    runs-on: ubuntu-latest
    needs: plan-resource-group
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: |
          cd config_files/iam/azure_ad_sp
          terraform init -backend-config="key=azure_ad_sp.tfstate"
          terraform validate
          terraform plan -var-file="../../../${VAR_FILE}" -out=tfplan-azure-ad-sp

  # APPLY JOBS (PR Merge to Dev)
  apply-resource-group:
    name: Apply resource_group
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: |
          cd config_files/resource_group
          terraform apply -auto-approve tfplan

  apply-azure-ad-sp:
    name: Apply azure_ad_sp
    runs-on: ubuntu-latest
    needs: apply-resource-group
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: |
          cd config_files/iam/azure_ad_sp
          terraform apply -auto-approve tfplan