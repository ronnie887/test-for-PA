name: Terraform Multi-Directory Pipeline

on:
  push:
    branches: [feature/*]
    paths: ['config_files/**', 'environments/dev.tfvars']
  pull_request:
    branches: [main]
    paths: ['config_files/**', 'environments/dev.tfvars']

env:
  TF_VERSION: '1.12.2'
  VAR_FILE: 'environments/dev.tfvars'
  #ARM_CLIENT_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
  #ARM_CLIENT_SECRET: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
  #ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV
  #ARM_TENANT_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV

jobs:
  plan-all:
    name: Plan All Directories
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    #outputs:
      #plan-status: ${{ steps.plan-summary.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: Sequential Plan Execution
        id: plan-all
        run: |
          DIRECTORIES=("rg_ad" "iam" "df_sa" "rest_storage" "compute")
          PLAN_STATUS="success"
          
          for dir in "${DIRECTORIES[@]}"; do
            echo "=== Planning $dir ==="
            cd "config_files/$dir"
            terraform init
            terraform validate
            terraform plan \
              -var-file="../../${VAR_FILE}" \
              -out="tfplan-${dir}" \
              -no-color
            cd - > /dev/null
          done

      - name: Upload Plan Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plans
          path: config_files/*/tfplan-*
          retention-days: 5
            
  apply-Sequential:
    name: Apply Sequential
    runs-on: ubuntu-latest
    needs: plan-all
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Sequential Apply Execution
        run: |
          DIRECTORIES=("rg_ad" "iam" "df_sa" "rest_storage" "compute")
          for dir in "${DIRECTORIES[@]}"; do
            echo "=== Applying $dir ==="
            cd "config_files/$dir"
            terraform init
            terraform apply \
              -var-file="../../${VAR_FILE}" \
              -auto-approve
            cd - > /dev/null
          done