name: Terraform CI/CD

on:
  push:
    branches: [feature/*]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'
  pull_request:
    branches: [main]
    types: [closed]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'

env:
  TF_VERSION: '1.12.2'
  VAR_FILE: 'environments/dev.tfvars'

jobs:
  plan-apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Plan Modules (on push to feature)
        if: github.event_name == 'push'
        run: |
          set -e
          MODULES=(
            #"resource_group/resource_group"
            #"iam/azure_ad_sp"
            "iam/uami"
            #"iam/key_vault"
            #"data_storage/storage_account"
            #"iam/rbac"
            #"data_storage/container_registry"
            #"data_storage/postgres_flexible_server"
            #"data_storage/redis_cache"
            #"data_storage/synapse_workspace"
            #"compute/app_service_plan"
            #"compute/function_app"
            #"compute/static_web_app"
            #"compute/web_app"
          )
          for mod in "${MODULES[@]}"; do
            echo "=== Planning $mod ==="
            cd "config_files/$mod"
            terraform init \
              -backend-config="resource_group_name=${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}" \
              -backend-config="storage_account_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}" \
              -backend-config="container_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
              -backend-config="key=config_files/$mod/terraform.tfstate"
            terraform validate
            terraform plan -var-file="../../../${VAR_FILE}" -out=tfplan
            cd - > /dev/null
          done

      - name: Plan and Apply Modules (on PR merge to dev)
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        run: |
          set -e
          MODULES=(
            #"resource_group/resource_group"
            #"iam/azure_ad_sp"
            "iam/uami"
            #"iam/key_vault"
            #"data_storage/storage_account"
            #"iam/rbac"
            #"data_storage/container_registry"
            #"data_storage/postgres_flexible_server"
            #"data_storage/redis_cache"
            #"data_storage/synapse_workspace"
            #"compute/app_service_plan"
            #"compute/function_app"
            #"compute/static_web_app"
            #"compute/web_app"
          )
          for mod in "${MODULES[@]}"; do
            echo "=== Deploying $mod ==="
            cd "config_files/$mod"
            terraform init \
              -backend-config="resource_group_name=${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}" \
              -backend-config="storage_account_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}" \
              -backend-config="container_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
              -backend-config="key=config_files/$mod/terraform.tfstate"
            terraform validate
            terraform plan -var-file="../../../${VAR_FILE}" -out=tfplan
            terraform apply -auto-approve tfplan
            cd - > /dev/null
          done
