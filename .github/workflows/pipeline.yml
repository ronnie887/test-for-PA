name: Terraform CI/CD (Sequential Dependency)

on:
  push:
    branches: [feature/*]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'
  pull_request:
    branches: [dev]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'

env:
  TF_VERSION: '1.5.0'
  VAR_FILE: 'environments/dev.tfvars'

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        action: [plan, apply]
    if: >
      (matrix.action == 'plan' && github.event_name == 'push') ||
      (matrix.action == 'apply' && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Run Terraform ${{ matrix.action }}
        run: |
          set -e
          DIRECTORIES=("rg_ad" "iam" "df_sa" "rest_storage" "compute")
          for dir in "${DIRECTORIES[@]}"; do
            echo "=== ${{ matrix.action }} for $dir ==="
            cd "config_files/$dir"

            # Init
            terraform init \
              -backend-config="key=${dir}.tfstate"

            # Validate
            terraform validate

            if [ "${{ matrix.action }}" = "plan" ]; then
              terraform plan \
                -var-file="../../${VAR_FILE}" \
                -out="tfplan-${dir}" \
                -no-color
            else
              terraform apply \
                -var-file="../../${VAR_FILE}" \
                -auto-approve
            fi

            cd - > /dev/null
          done
