name: Terraform CI/CD (Sequential Plan & Apply)

on:
  push:
    branches: [feature/*]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'
  pull_request:
    branches: [dev]
    paths:
      - 'config_files/**'
      - 'environments/dev.tfvars'

env:
  TF_VERSION: '1.12.2'
  VAR_FILE: 'environments/dev.tfvars'

jobs:
  sequential-deploy:
    name: Plan & Apply in Dependency Order
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Deploy All Modules Sequentially
        run: |
          set -e
          DIRECTORIES=("rg_ad" "iam" "df_sa" "rest_storage" "compute")
          
          for dir in "${DIRECTORIES[@]}"; do
            echo "=== Processing $dir ==="
            cd "config_files/$dir"

            echo "Initializing Terraform for $dir..."
            terraform init \
              -backend-config="key=${dir}.tfstate"

            echo "Validating configuration for $dir..."
            terraform validate

            if [ "${{ github.event_name }}" = "push" ]; then
              echo "Planning $dir..."
              terraform plan \
                -var-file="../../${VAR_FILE}" \
                -out="tfplan-${dir}" \
                -no-color
            fi

            if [ "${{ github.event_name }}" = "pull_request" ] && \
               [ "${{ github.event.action }}" = "closed" ] && \
               ${ { github.event.pull_request.merged } }; then
              echo "Applying $dir..."
              terraform apply \
                -var-file="../../${VAR_FILE}" \
                -auto-approve
            fi

            cd - > /dev/null
            echo "âœ… Completed $dir"
            echo
          done
